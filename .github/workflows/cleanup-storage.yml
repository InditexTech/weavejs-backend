name: Cleanup Storage

on:
  schedule:
    - cron: "0 4 * * *" # Runs at 04:00 GMT every day
  workflow_dispatch:
    inputs:
      BASELINE:
        description: "Baseline branch"
        required: true
        default: "main"
      ENVIRONMENT:
        description: "Deploy environment"
        required: true
        type: choice
        options:
          - azure-development
          - azure-production
        default: "azure-production"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Cleanup Storage
    runs-on: ubuntu-24.04
    environment: ${{ github.event.inputs.ENVIRONMENT && github.event.inputs.ENVIRONMENT || 'azure-production' }}
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      AZURE_STORAGE_ROOMS_CONTAINER_NAME: ${{ vars.AZURE_STORAGE_ROOMS_CONTAINER_NAME }}
      AZURE_STORAGE_IMAGES_CONTAINER_NAME: ${{ vars.AZURE_STORAGE_IMAGES_CONTAINER_NAME }}
      DRY_RUN: ${{ vars.DRY_RUN }}
    steps:
      - name: Get input parameters
        run: |
          BASELINE_BRANCH=${{ github.event.inputs.BASELINE || 'main' }}
          echo "BASELINE_BRANCH=${BASELINE_BRANCH#refs/heads/}" >> "$GITHUB_ENV"

      - name: Checkout / Merge Commit
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BASELINE_BRANCH }}
          fetch-depth: 0
          persist-credentials: false

      - name: Checkout / Branch Head
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: NPM / Setup Dependencies Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: asdf / Setup Dependencies Cache
        uses: actions/cache@v4
        id: asdf-cache
        with:
          path: ~/.asdf/data
          key: ${{ runner.os }}-asdf-${{ hashFiles('**/.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-asdf-

      - name: Save tool-versions content
        run: |
          {
            echo "TOOL_VERSIONS<<EOF"
            cat code/.tool-versions
            echo "EOF"
          } >> "$GITHUB_ENV"

      - name: NPM / Setup asdf environment
        uses: asdf-vm/actions/install@v3
        # https://github.com/asdf-vm/actions/issues/356
        if: steps.asdf-cache.outputs.cache-hit != 'true'
        with:
          tool_versions: ${{ env.TOOL_VERSIONS }}

      - name: NPM / Create Cache Folders
        run: |
          mkdir -p "$HOME"/.npm
          mkdir -p "$HOME"/.asdf/data

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Create .env file
        working-directory: code
        run: |
          touch ./src/actions/storage-cleanup/.env
          echo AZURE_STORAGE_CONNECTION_STRING="${{ env.AZURE_STORAGE_CONNECTION_STRING }}" >> ./src/actions/storage-cleanup/.env
          echo AZURE_STORAGE_ROOMS_CONTAINER_NAME=${{ env.AZURE_STORAGE_ROOMS_CONTAINER_NAME }} >> ./src/actions/storage-cleanup/.env
          echo AZURE_STORAGE_IMAGES_CONTAINER_NAME=${{ env.AZURE_STORAGE_IMAGES_CONTAINER_NAME }} >> ./src/actions/storage-cleanup/.env
          echo DRY_RUN=${{ env.DRY_RUN }} >> ./src/actions/storage-cleanup/.env

      - name: NPM / Run Storage Cleanup
        working-directory: code
        run: |
          npm ci
          cat ./src/actions/storage-cleanup/.env
          npm run storage:cleanup
