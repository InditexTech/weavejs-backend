---
name: code-npm-deploy

on:
  pull_request:
    types: [closed]
    branches: ["main", "main-*"]
    paths: ["code/**", ".github/workflows/code**"]
  workflow_dispatch:
    inputs:
      BASELINE:
        description: "Baseline branch"
        required: true
        default: "internal/GH-1308-azure-test-environment"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy to Container Apps
    runs-on: ubuntu-24.04
    environment: azure-test
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_ACR_USERNAME_TEST: ${{ secrets.AZURE_ACR_USERNAME_TEST }}
      AZURE_ACR_PASSWORD_TEST: ${{ secrets.AZURE_ACR_PASSWORD_TEST }}
      AZURE_ACR_NAME: "acrweavejs1eg5uf"
      AZURE_RESOURCE_GROUP: "cloudcotwo-rsg-frc1-pro-wjs"
      AZURE_CONTAINER_ENVIRONMENT_NAME: "container-apps-env-weavejs-1eg5uf"
      AZURE_CONTAINER_NAME: "backend-wjs"
      AZURE_IDENTITY_ID: ${{ secrets.AZURE_IDENTITY_ID }}
      AZURE_WEB_PUBSUB_ENDPOINT: ${{ secrets.AZURE_WEB_PUBSUB_ENDPOINT }}
      AZURE_WEB_PUBSUB_KEY: ${{ secrets.AZURE_WEB_PUBSUB_KEY }}
      AZURE_WEB_PUBSUB_HUB_NAME: ${{ secrets.AZURE_WEB_PUBSUB_HUB_NAME }}
      AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      AZURE_STORAGE_ROOMS_CONTAINER_NAME: ${{ vars.AZURE_STORAGE_ROOMS_CONTAINER_NAME }}
      AZURE_STORAGE_IMAGES_CONTAINER_NAME: ${{ vars.AZURE_STORAGE_IMAGES_CONTAINER_NAME }}
      PERSIST_FREQUENCY_SEG: ${{ vars.PERSIST_FREQUENCY_SEG }}
      LOG_LEVEL: ${{ vars.LOG_LEVEL }}
    steps:
      - name: Checkout merge commit
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Create .env.production file
        working-directory: code
        run: |
          touch .env
          echo AZURE_WEB_PUBSUB_ENDPOINT=${{ env.AZURE_WEB_PUBSUB_ENDPOINT }} >> .env
          echo AZURE_WEB_PUBSUB_KEY=${{ env.AZURE_WEB_PUBSUB_KEY }} >> .env
          echo AZURE_WEB_PUBSUB_HUB_NAME=${{ env.AZURE_WEB_PUBSUB_HUB_NAME }} >> .env
          echo AZURE_STORAGE_CONNECTION_STRING="${{ env.AZURE_STORAGE_CONNECTION_STRING }}" >> .env
          echo AZURE_STORAGE_ROOMS_CONTAINER_NAME=${{ env.AZURE_STORAGE_ROOMS_CONTAINER_NAME }} >> .env
          echo AZURE_STORAGE_IMAGES_CONTAINER_NAME=${{ env.AZURE_STORAGE_IMAGES_CONTAINER_NAME }} >> .env
          echo PERSIST_FREQUENCY_SEG=${{ env.PERSIST_FREQUENCY_SEG }} >> .env
          echo LOG_LEVEL=${{ env.LOG_LEVEL }} >> .env

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: ACR Login
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_ACR_NAME }}.azurecr.io
          username: ${{ env.AZURE_ACR_USERNAME_TEST }}
          password: ${{ env.AZURE_ACR_PASSWORD_TEST }}

      - name: Build image and push it to ACR
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64
          context: code
          tags: ${{ env.AZURE_ACR_NAME }}.azurecr.io/${{ env.AZURE_CONTAINER_NAME }}:${{ github.sha }}
          file: code/Dockerfile

      - name: Deploy
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az containerapp create \
              --name $AZURE_CONTAINER_NAME \
              --resource-group $AZURE_RESOURCE_GROUP \
              --environment $AZURE_CONTAINER_ENVIRONMENT_NAME \
              --image $AZURE_ACR_NAME.azurecr.io/$AZURE_CONTAINER_NAME:${{ github.sha }} \
              --registry-server $AZURE_ACR_NAME.azurecr.io \
              --user-assigned "$AZURE_IDENTITY_ID" \
              --registry-identity "$AZURE_IDENTITY_ID" \
              --ingress external \
              --target-port 8080 \
              --min-replicas 1 \
              --max-replicas 2 \
              --cpu 2.0 \
              --memory 4.0Gi \
              --scale-rule-name http-rule \
              --scale-rule-type http \
              --scale-rule-http-concurrency 10 \
              --query properties.configuration.ingress.fqdn
